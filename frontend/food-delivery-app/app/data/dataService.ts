import { restaurants, products ,restaurantImages, users,reviews} from "./mockData";
import { ImageSourcePropType } from 'react-native';

export function getAllRestaurants() {
  return [...restaurants]; // clone m·∫£ng, kh√¥ng l√†m thay ƒë·ªïi d·ªØ li·ªáu g·ªëc
}


export const getAllRestaurantsImg = () => {
  return restaurantImages;
};

//2. H√†m l·∫•y t·∫•t c·∫£ m√≥n ƒÉn c·ªßa m·ªôt nh√† h√†ng c·ª• th·ªÉ
export const getProductsByRestaurantId = (restaurantId: string) => {
    // M√¥ ph·ªèng vi·ªác l·ªçc d·ªØ li·ªáu nh∆∞ query SQL/MongoDB
    return products.filter(product => product.restaurant_id === restaurantId);
};

// 3. H√†m l·∫•y chi ti·∫øt m·ªôt m√≥n ƒÉn
export const getProductDetails = (productId: string) => {
    return products.find(product => product.id === productId);
};

// H√†m l·∫•y ·∫£nh c·ªßa m·ªôt nh√† h√†ng theo id
export const getRestaurantImageById = (restaurantId: string): ImageSourcePropType | null => {
 return restaurantImages[restaurantId] || null;};

// 1Ô∏è‚É£ H√†m ki·ªÉm tra ƒëƒÉng nh·∫≠p t·ª´ mockData
export const loginUser = (sdt: string, matKhau: string) => {
  console.log("Ki·ªÉm tra login:", sdt, matKhau); // üëà Th√™m d√≤ng n√†y
  const user = users.find((u) => u.sdt === sdt && u.matKhau === matKhau);
  console.log("K·∫øt qu·∫£ t√¨m ƒë∆∞·ª£c:", user); // üëà V√† d√≤ng n√†y
  return user || null;
};


// 2Ô∏è‚É£ H√†m l·∫•y th√¥ng tin t·∫•t c·∫£ ng∆∞·ªùi d√πng
export const getAllUsers = () => {
  return [...users];
};
// L·∫•y t·∫•t c·∫£ review c·ªßa 1 nh√† h√†ng
export const getReviewsByRestaurantId = (restaurantId: string) => {
  return reviews.filter(reviews=> reviews.restaurant_id === restaurantId);
}
//  T√≠nh trung b√¨nh rating c·ªßa 1 nh√† h√†ng
export const getAverageRatingByRestaurantId = (restaurantId: string) => {
  const restaurantReviews = reviews.filter(r => r.restaurant_id === restaurantId);
  if (restaurantReviews.length === 0) return 0; // n·∫øu ch∆∞a c√≥ review th√¨ tr·∫£ 0

  const total = restaurantReviews.reduce((sum, r) => sum + r.rating, 0);
  return parseFloat((total / restaurantReviews.length).toFixed(1)); // l√†m tr√≤n 1 ch·ªØ s·ªë
};
